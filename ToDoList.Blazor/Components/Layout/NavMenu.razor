@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject AuthService AuthService

@code {
    //traccio lo stato autenticato dell'utente
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        //reagisce ai cambiamenti di Login/Logout
        AuthService.OnAuthStateChanged += OnAuthStateChanged;
        //determina se l'utente è già autenticato
        await CheckAuthStatusAsync();
    }

    //verifica se esiste il token valido e aggiorna isAuthenticated
    private async Task CheckAuthStatusAsync()
    {
        await AuthService.GetTokenAsync(); // Sincronizza token
        isAuthenticated = AuthService.IsLoggedIn;
        StateHasChanged();
    }

    //quando l'utente fa login/logout si aggiorna 
    private void OnAuthStateChanged()
    {
        isAuthenticated = AuthService.IsLoggedIn;
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AuthService.OnAuthStateChanged -= OnAuthStateChanged;
    }
}

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ToDoList.Blazor</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (isAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="todolist">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> ToDoList
                </NavLink>
            </div>
        }
    </nav>
</div>
